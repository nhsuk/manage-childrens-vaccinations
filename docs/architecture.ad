NOTE: This page is structured using asciidoc. GitHub does not automatically
      render these unfortunately, however you can have in-browser rendering
      using the
      https://github.com/asciidoctor/asciidoctor-browser-extension[Asciidoctor
      browser extension] and by viewing the raw file on GitHub. The extension
      also supports diagram rendering, which is enabled in the settings.

:toc:

= Architecture

:numbered:

== Introduction and Goals

Provide a service to record children's vaccinations in schools and during
catch-up clinics. This is a single service that provides consent and
point-of-care services for SAIS teams and parents, and which seamlessly
integrates with the personal demographics service and the national vaccination
record.


=== Requirements Overview

.Functional Requirements

A certain amount of user research, prototyping and design has already been
performed for this service. The goal of this system is to provide a
higher-fidelity prototype to further test out design and to better understand
user needs.

* Allow SAIS teams to deliver vaccination campaigns.
** Manage vaccination campaigns including location and cohort information.
** Send out consent invites and allow parents to give or refuse consent
** Record vaccinations administered.
* Allow SAIS teams to deliver campaigns in settings where there is no Internet
  access, i.e. offline working.

.Non-Functional Requirements

This service is in alpha and its primary purpose is to explore user needs
through user research. This will present a user-facing frontend for the SAIS
team and parents to use, and will connect with PDS and the as-yet-undefined
National Vaccination Record service. PDS will be used to populate missing
patient data.

* Security
** Simple authentication and authorisation model
** Security model appropriate for scale of experiment
** No integration with NHS CIS 2 or other SSO provider, this isn't required yet
* Rapid development
** Cloud-based deployment
** CI & CD for fast and stable deployment
** Web application framework that enables accelerated delivery
* Data persistance
** Data persisted between sessions and users
** No long term data storage, i.e. beyond end of experiment
** Support for offline functionality
* Integration with NHS services
** Send events to National Vaccination Record
** Use People Finder (PDS) to retrieve patient's personal information, for patients whose NHS number isn't known

We won't need:

* Scalability
* Authentication that's integrated with wider NHS or other SSO provider
* Reporting capability
* Long term maintainability of codebase
* Long term storage of data

== Architecture Constraints

- The system must protect patient data and comply with all applicable laws and
  regulations.
- The system will need to be compatible with the national vaccination record
  system.
- The system must be deployed to a cloud platform, but also be platform agnostic
  and not constrained to run on any one cloud platform.
- The system will adhere to the applicable NHS architecture and design principles.

== System Scope and Context

=== Business Context

[plantuml, target="business context"]
....
@startuml

!include <C4/C4_Context.puml>

LAYOUT_TOP_DOWN()
LAYOUT_WITH_LEGEND()

title Record Children's Vaccination Business Context Overview

Person(sais, "SAIS Team")
Person_Ext(parents, "Parents")

System(record, "Record Children's Vaccination", "")
SystemDb(vaccineRecord, "Vaccination Record", "FHIR Server")
SystemDb(pds, "PDS")

System_Ext(notify, "GOV.UK Notify")

Rel(sais, record, "Manages campaigns")
Rel(sais, record, "Records Child Vaccination")
Rel(parents, record, "Consent response")
Rel(record, vaccineRecord, "Updates Child Vaccination History")
Rel(record, pds, "Requests Patient Details")t
Rel(record, notify, "Send consent notifications", "Rest API")
Rel_U(notify, parents, "Consent notification", "Email")

@enduml
....

SAIS Team::
Team responsible for performing vaccinations on school-aged children.

Parents::
Parents are notified of the planned vaccination campaign and invited to give
consent for their children to be vaccinated.

Record Children's Vaccination Service::
The service will be used by the SAIS team to record vaccinations. The
vaccination will be transferred to the national vaccination record.

Vaccination Record::
Service which will hold a record of vaccinations for citizens across the NHS.
This service is currently being designed and it's final form is yet to be
determined, however any new service created will very likely use a Rest
FHIR API.
+
However, it is possible that in the interim this service will be DPS, which is
built using Data Bricks and which uses file transfers for data input and output,
so may present additional challenges.

PDS (Personal Demographics Service)::
Service which will allow us to look up NHS numbers for patients who don't know
theirs. Crucial for properly identifying patients.

GOV.UK Notify::
Used to send notifications to parents about vaccination campaigns and consent.

=== Technical Overview

[plantuml, technical-context]
....
@startuml

!include <C4/C4_Container.puml>

LAYOUT_TOP_DOWN()


title Record Children's Vaccination Business Context Overview

Person(sais, "SAIS Team")
Person_Ext(parents, "Parents")

System_Boundary(record, "Record Children's Vaccination", "") {
  Container(webapp, "Web Application", "Ruby on Rails, JavaScript")
  ContainerDb(db, "Database", "PostgreSQL", $descr="Stores campaign and consent data")
  Lay_R(webapp, db)
}
SystemDb(vaccineRecord, "Vaccination Record", "FHIR Server")
SystemDb(pds, "PDS", "")

System_Ext(notify, "GOV.UK Notify")

Rel(sais, webapp, "Manages campaigns")
Rel(sais, webapp, "Records Child Vaccination")
BiRel(webapp, db, "Campaign data")
Rel(parents, webapp, "Consent response")
Rel(webapp, vaccineRecord, "Updates Child Vaccination History")
Rel(webapp, pds, "Requests Patient Details")t
Rel(webapp, notify, "Send consent notifications", "Rest API")
Rel_U(notify, parents, "Consent notification", "Email")

Lay_D(db, pds)
Lay_D(db, vaccineRecord)
Lay_D(db, notify)


SHOW_FLOATING_LEGEND()
Lay_Distance(LEGEND(), db, 1)

@enduml
....


== Components

- Authentication
- Campaign management - creation, update, etc
- Campaign operations and vaccination recording
- Offline support - Browser-based component
- FHIR server synchonisation
