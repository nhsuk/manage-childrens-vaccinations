<% page_title = "Check consent responses" %>

<% content_for :before_main do %>
  <%= render AppBreadcrumbComponent.new(items: [
    { text: 'Home', href: dashboard_path },
    { text: 'School sessions', href: sessions_path },
    { text: "#{@session.campaign.name} session at #{@session.name}", href: session_path(@session) },
    { text: page_title },
  ]) %>
<% end %>

<%= h1 page_title, page_title: %>

<% if @unmatched_record_counts > 0 %>
  <%= govuk_inset_text do %>
    <span class="nhsuk-visually-hidden">Information: </span>

    <p>
      <%=
        responses = pluralize(@unmatched_record_counts, 'response')
        link_to(
          "#{responses} need matching with records in the cohort",
          unmatched_responses_session_path(@session)
        )
      %>
    </p>
  <% end %>
<% end %>

<% def tab_content(slot, state, tab_path, columns: %i[name dob])
  label = t("states.#{state}.label")
  selected = state == @current_tab
  path = consents_tab_session_path(@session, tab: tab_path)
  count = @tab_counts[state]

  slot.with_tab(
    id: label.parameterize,
    link: path,
    label: "#{label} (#{count})",
    classes: 'nhsuk-tabs__panel',
    selected:
  ) do
    if selected && @patient_sessions.size > 0
      render AppPatientTableComponent.new(
        patient_sessions: @patient_sessions,
        tab_id: label.parameterize,
        caption: t("states.#{state}.title"),
        columns:,
        route: :consent
      )
    else
      ""
    end
  end
end %>

<%= render AppTabComponent.new title: "Consents", classes: 'nhsuk-tabs' do |slot|
  tab_content(slot, :no_consent, :"no-consent")
  tab_content(slot, :consent_given, :given)
  tab_content(slot, :consent_refused, :refused, columns: %i[name dob reason])
  tab_content(slot, :conflicting_consent, :conflicts)
end %>
