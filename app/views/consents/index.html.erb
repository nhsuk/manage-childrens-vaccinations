<% page_title = "Check consent responses" %>

<% content_for :before_main do %>
  <%= render AppBreadcrumbComponent.new(items: [
    { text: 'Home', href: dashboard_path },
    { text: 'School sessions', href: sessions_path },
    { text: "#{@session.campaign.name} session at #{@session.name}", href: session_path(@session) },
    { text: page_title },
  ]) %>
<% end %>

<%= h1 page_title, page_title: %>

<% if @unmatched_record_counts > 0 %>
  <%= govuk_inset_text(classes: "nhsuk-u-margin-top-4 nhsuk-u-margin-bottom-4") do %>
    <p class="nhsuk-body">
      <%=
        responses = pluralize(@unmatched_record_counts, 'response')
        link_to(
          "#{responses} need matching with records in the cohort",
          unmatched_responses_session_path(@session)
        )
      %>
    </p>
  <% end %>
<% end %>

<% def consent_tab(slot, state, columns: %i[name dob])
  label = t("states.#{state}.label")
  data = @tabs[state]
  slot.with_tab(id: label.parameterize,
                label: "#{label} (#{data.size})",
                classes: 'nhsuk-tabs__panel') do
    if data.size > 0
      render AppPatientTableComponent.new(
        patient_sessions: data,
        tab_id: label.parameterize,
        caption: t("states.#{state}.title"),
        columns:,
        route: :consent,
      )
    else
      render AppEmptyListComponent.new(
        title: t("states.#{state}.title"),
        text: t("table.no_results")
      )
    end
  end
end %>

<%= render AppTabComponent.new title: "Consents", classes: 'nhsuk-tabs' do |slot|
  consent_tab(slot, :no_consent?)
  consent_tab(slot, :consent_given?)
  consent_tab(slot, :consent_refused?, columns: %i[name dob reason])
  consent_tab(slot, :consent_conflicts?)
end %>
