<% content_for :before_main do %>
  <%= render AppBacklinkComponent.new(
        href: back_link_path,
        name: "previous page",
      ) %>
<% end %>

<% page_title = "Check and confirm answers" %>

<%= h1 page_title: do %>
  <span class="nhsuk-caption-l nhsuk-u-margin-top-2">
    <%= @patient.full_name %>
  </span>
  <%= page_title %>
<% end %>

<% if @consent.via_self_consent? %>
  <%= render AppGillickCardComponent.new(
        assessment: @patient_session.draft_gillick_assessment || @patient_session.gillick_assessment,
      ) %>
<% else %>
  <%= # BUG: this code was originally written with the assumption that it is called
      # when the user is contacting a refusing parent (that assumption is baked into the microcopy)
      # However, this code is also invoked when a user is recording the first verbal consent,
      # and in that case, it doesn't quite display the right thing:
      #
      #   Consent updated to given...
      #
      # (it's not actually being updated as there wasn't consent there before)
      # The code really needs awareness of whether there was a previous consent or not, and
      # if there was one, what the response was. i.e. the previous_response needs to be dynamic.
      
      heading = @consent.summary_with_consenter(previous_response: "refused")
      render AppCardComponent.new(heading:) do
        render AppConsentSummaryComponent.new(
          name: @consent.parent_name,
          relationship: @consent.who_responded,
          contact: {
            phone: @consent.parent_phone,
            email: @consent.parent_email,
          },
          response: {
            text: @consent.summary_with_route(previous_response: "refused"),
            timestamp: @consent.recorded_at,
            recorded_by: @consent.recorded_by,
          },
          refusal_reason: {
            reason: @consent.human_enum_name(:reason_for_refusal).presence,
            notes: @consent.reason_for_refusal_notes,
          },
        )
      end %>
<% end %>

<% if @consent.response_given? %>
  <%= render AppCardComponent.new(heading: "Health questions") do %>
    <%= render AppHealthQuestionsComponent.new(consents: [@consent]) %>
  <% end %>
<% end %>

<% if @consent.response_given? && @triage.status.present? %>
  <%= render AppCardComponent.new(heading: "Triage") do %>
    <%= govuk_summary_list classes: "app-summary-list--no-bottom-border" do |summary_list|
          summary_list.with_row do |row|
            row.with_key { "Status" }
            row.with_value { @triage.status.humanize }
          end
        
          summary_list.with_row do |row|
            row.with_key { "Triage notes" }
            row.with_value { @triage.notes.presence || "No notes" }
          end
        end %>
  <% end %>
<% end %>

<%= govuk_button_to "Confirm", wizard_path, method: :put, prevent_double_click: true %>
